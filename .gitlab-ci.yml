# .gitlab

workflow:
  name: Build & Deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH =~ /^feature/'
      when: always
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature/ && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

include:
  - template: 'Jobs/Code-Quality.gitlab-ci.yml'

stages:
  - build
  - test
  - dev-deploy
  - secure

variables:
  DOCKER_IMAGE_PREFIX: "netflix-app"
  DOCKER_REGISTRY_URL: "registry.local:8443"
  PORT: 8080
  DOCKER_DRIVER: overlay2

dast_scan:
  stage: .pre
  image: owasp/zap2docker-stable:latest  # Image with ZAP, a popular DAST tool
  services:
    - docker:dind  # Docker-in-Docker service to allow Docker commands if needed
  dependencies:
    - k8s_dev_deploy
  variables:
    DOCKER_DRIVER: overlay2
    ZAP_PORT: 8080  # Port for ZAP to run on
  script:
    - echo "Starting ZAP container"
    - docker run -d -v /var/run/docker.sock:/var/run/docker.sock --name zap -p 8080:8080 owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080
    - echo "Waiting for ZAP to start..."
    - sleep 30  # Wait for ZAP to start
    - echo "Starting DAST scan"
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/zap/wrk owasp/zap2docker-stable zap.sh -cmd -quickurl http://netflix.local -quickout /zap/wrk/zap-report.html
  artifacts:
    paths:
      - zap-report.html
    when: always