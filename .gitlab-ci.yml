# .gitlab

workflow:
  name: Build & Deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH =~ /^feature/'
      when: always
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature/ && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

include:
#  - template: 'Jobs/Code-Quality.gitlab-ci.yml'
#  - template: 'Jobs/SAST.gitlab-ci.yml'
#  - template: 'Jobs/Secret-Detection.gitlab-ci.yml'
  - template: 'Jobs/Container-Scanning.gitlab-ci.yml'
  - template: 'Jobs/Dependency-Scanning.gitlab-ci.yml'
stages:
  - build
  - test
  - dev-deploy
  - secure

variables:
  DOCKER_IMAGE_PREFIX: "netflix-app"
  DOCKER_REGISTRY_URL: "registry.local:8443"
  PORT: 8080
  DOCKER_DRIVER: overlay2

build:
  stage: build
  tags:
    - docker
  services: 
    - docker:dind
  variables:  
    IMAGE_TAG: $DOCKER_REGISTRY_URL/netflix-app/$DOCKER_IMAGE_PREFIX-tst:$CI_COMMIT_SHA
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $DOCKER_REGISTRY_URL
  script: 
    - docker build -t $IMAGE_TAG . 
    - docker push $IMAGE_TAG

.code_quality:
  stage: .pre
  tags:
    - docker
  script:
    - echo "code - quality"
  artifacts:
    paths: [gl-code-quality-report.json]

.secret_detection:
  stage: .pre
  tags:
    - docker
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: 'true'

.sast:
  stage: test
  variables:
    CI_DEBUG_TRACE: "true"
    SCAN_KUBERNETES_MANIFESTS: "true"
  tags:
    - docker 
  artifacts:
    reports:
      sast: gl-sast-report.json

container_scanning:
  stage: test
  tags:
    - docker 
  image: docker:latest
  variables:
      GIT_STRATEGY: fetch
      KLAR_TRACE: "true"
      CLAIR_TRACE: "true"
  before_script:
    # Use docker login to authenticate to your Docker registry
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $DOCKER_REGISTRY_URL
  allow_failure: true

dependency_scanning:
  stage: test
  tags:
    - docker 
  variables:
    CI_DEBUG_TRACE: "true"

